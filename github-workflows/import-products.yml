name: Import Products (AI Agent)

on:
  workflow_dispatch:
    inputs:
      job_id:
        description: 'Supabase import_jobs.id (UUID)'
        required: false
        type: string
      niche:
        description: 'Optional niche filter (home|lighting|fitness|all)'
        required: false
        default: 'all'
        type: string

jobs:
  import:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg curl

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install requests pyyaml opencv-python-headless pillow numpy yt-dlp

      - name: Verify required environment variables
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          if [ -z "$SUPABASE_URL" ]; then
            echo "ERROR: SUPABASE_URL secret not configured"
            exit 1
          fi
          if [ -z "$SUPABASE_ANON_KEY" ]; then
            echo "ERROR: SUPABASE_ANON_KEY secret not configured"
            exit 1
          fi
          echo "Environment variables verified"

      - name: Run product import script
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          REVOA_ADMIN_TOKEN: ${{ secrets.REVOA_ADMIN_TOKEN }}
          REVOA_ADMIN_EMAIL: ${{ secrets.REVOA_ADMIN_EMAIL }}
          REVOA_ADMIN_PASSWORD: ${{ secrets.REVOA_ADMIN_PASSWORD }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          JOB_ID: ${{ github.event.inputs.job_id }}
          NICHE: ${{ github.event.inputs.niche }}
          GITHUB_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          mkdir -p logs
          echo "Starting import with JOB_ID: ${JOB_ID:-none}, NICHE: ${NICHE}"

          python scripts/revoa_import.py 2>&1 | tee logs/agent_output.log

          if [ ! -f run_summary.json ]; then
            echo '{"total":0,"successful":0,"failed":0,"skipped":0}' > run_summary.json
          fi

          echo "Import completed. Summary:"
          cat run_summary.json

      - name: Report success to Supabase
        if: success()
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
        run: |
          JOB_ID="${{ github.event.inputs.job_id }}"
          if [ -z "$JOB_ID" ]; then
            JOB_ID="manual-${{ github.run_id }}"
          fi

          SUMMARY_JSON=$(cat run_summary.json)
          GITHUB_RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo "Reporting success to Supabase..."
          curl -sS -X POST \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE" \
            -H "Content-Type: application/json" \
            -d "{\"job_id\":\"${JOB_ID}\",\"status\":\"completed\",\"summary\":${SUMMARY_JSON},\"github_run_url\":\"${GITHUB_RUN_URL}\"}" \
            "$SUPABASE_URL/functions/v1/agent-callback"

      - name: Report failure to Supabase
        if: failure()
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
        run: |
          JOB_ID="${{ github.event.inputs.job_id }}"
          if [ -z "$JOB_ID" ]; then
            JOB_ID="manual-${{ github.run_id }}"
          fi

          if [ -f run_summary.json ]; then
            SUMMARY_JSON=$(cat run_summary.json)
          else
            SUMMARY_JSON='{"total":0,"successful":0,"failed":1,"skipped":0}'
          fi

          GITHUB_RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo "Reporting failure to Supabase..."
          curl -sS -X POST \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE" \
            -H "Content-Type: application/json" \
            -d "{\"job_id\":\"${JOB_ID}\",\"status\":\"failed\",\"summary\":${SUMMARY_JSON},\"github_run_url\":\"${GITHUB_RUN_URL}\"}" \
            "$SUPABASE_URL/functions/v1/agent-callback"

      - name: Upload execution logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: import-logs-${{ github.run_id }}
          path: |
            logs/agent_output.log
            run_summary.json
          retention-days: 30
